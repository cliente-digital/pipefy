#!/usr/bin/env php
<?php declare(strict_types=1);

namespace Clientedigital\Pipefy;

require_once  $GLOBALS['_composer_autoload_path'];

function help(){
        echo PHP_EOL;
        echo "choose an option:".PHP_EOL;
        echo "--config: configure the pipefy account".PHP_EOL;
        echo "--report: extract Markdown Report about Pipefy Objects".PHP_EOL;
}
(static function ($args) {
    global $GLOBALS;

    echo " ## Cliente Digital -  Pipefy ##".PHP_EOL;
    echo "   A Pipefy API wrapper that uplift productivity".PHP_EOL;
    echo "   of newcomers to graphQL tech.".PHP_EOL;
    echo "   by Ivo Nascimento <ivo at cliente.digital>.".PHP_EOL;
    echo "                       http://cliente.digital.".PHP_EOL;
    $composer_bin_path = ($GLOBALS['_composer_bin_dir']);
    $composer_vendor_path = str_replace("/bin","", $composer_bin_path );
    $root_path = str_replace("/vendor", "", $composer_vendor_path);
    $configFile = getEnv('CLIENTEDIGITAL_PIPEFY_CONFIG_FILE');
    if($configFile === false){
        echo "Cant find CLIENTEDIGITAL_PIPEFY_CONFIG_FILE ENV variable.".PHP_EOL;
        echo "please set CLIENTEDIGITAL_PIPEFY_CONFIG_FILE with the ".PHP_EOL;
        echo "path of the ini file tha contain the [CLIENTEDIGITAL] section.".PHP_EOL;
        echo "and check the documentation for more information.".PHP_EOL;
        echo "https://github.com/cliente-digital/pipefy/blob/main/doc/configuration.md". PHP_EOL;
        exit(1);
    }

    if(count($args)<2){
        help();
        exit(0);
    }

    $action = $args[1];

    unset($args[0]);
    $args = array_values($args);
    $status = 1;
    if($action =="--config"){
        $status = (new Command\Config())->exec($args); 
    } else if($action == '--report'){
        $status = (new Command\Report())->exec($args); 
    }else {
        help();
    }
    exit($status);
})($argv);

